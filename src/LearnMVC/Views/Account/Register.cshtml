@model LearnMVC.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}

@section Scripts {
    @Content.Script(Links.Scripts.jquery_validate_min_js)
    @Content.Script(Links.Scripts.jquery_validate_unobtrusive_min_js)
    @Content.Script(Links.Scripts.jquery_blockUI_js)

    <script type="text/javascript">
        var inputId = "#userName";
        var messageId = "#userNameCheckValidation";
        var buttonId = "#btnCheckUserName";
        var freeClassName = "valid";
        var existsClassName = "error";

        $(document).ready(function () {
            $(inputId).keyup(function () {
                $(messageId)
                .text('');

                if ($(this).val() != '') {
                    $(buttonId).removeAttr("disabled");
                }
                else {
                    $(buttonId).attr("disabled", "disabled");
                }
            });

            $(buttonId).click(function () {
                $.getJSON("@Url.Action(MVC.Account.ActionNames.IsUserExists, MVC.Account.Name)", { userName: $(inputId).val() })
                .success(function (data) {
                    if (data == false) {
                        $(messageId)
                            .removeClass()
                            .addClass(freeClassName)
                            .text('* Пользователя с таким именем не существует');
                    }
                    else {
                        $(messageId)
                            .removeClass()
                            .addClass(existsClassName)
                            .text('* Пользователь с таким именем уже существует');
                    }
                });
            });
        });

        $(document).ajaxStart(function () {
            $.blockUI({ message: "<h3>Пожалуйста, ждите...</h3>" });
        }).ajaxStop($.unblockUI);
    </script>
}

<h2>
    Create a New Account</h2>
<p>
    Use the form below to create a new account.
</p>
<p>
    Passwords are required to be a minimum of @ViewBag.MinPasswordLength
    characters in length.
</p>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(false, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.UserName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.UserName, new { id = "userName" })
                <input type="button" id="btnCheckUserName" value="Проверить имя" disabled="disabled" />
            </div>
            <div>
                <span id="userNameCheckValidation" class=""></span>
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
            </div>
            <p>
                <input type="submit" value="Register" />
            </p>
        </fieldset>
    </div>
}
